export PATH="$PATH:/home/sander/bin:/$HOME/.local/bin"

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# zsh history stuff. `man  zshoptions` for more info
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_SPACE

bindkey=-e

zstyle :compinstall filename '/home/sander/.zshrc'

# source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

autoload -Uz compinit
compinit

eval "$(starship init zsh)"

DISABLE_AUTO_TITLE="true"

function set_terminal_title(){
    echo -ne "\033]0; $PWD \007"
}
precmd_functions+=(set_terminal_title)

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nano'
else
  export EDITOR='code --wait'
fi
export PIP_REQUIRE_VIRTUALENV=true

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

alias py="python"

# use fzf to filter out projects and open them in vscode.
alias vc='source ~/repos/dotfiles/scripts/vc.sh'

# cdd into a folder quickly starting
alias cdd='source ~/repos/dotfiles/scripts/find_folders.sh'

# use fzf to find a file starting at the current folder, ignoring any folder starting with "." (a dotted folder being a private folder.)
alias ff="find . -type f -not -path '*/\.*/*' | fzf --preview 'batcat {}'"

alias gco="git checkout"
alias gp="git push"
alias gpf="git push --force-with-lease --force-if-includes"
alias grbc="git rebase --continue"
alias gcm="git commit -m"

alias l='ls -lah'
alias ll='ls -lh'

# cd into the root of the git folder.
alias r='cd $(git rev-parse --show-toplevel)'

pts() {
    local selected_test
    selected_test=$(~/repos/dotfiles/scripts/list_tests.sh tests | fzf)
    if [[ -n "$selected_test" ]]; then
          print -z "uv run pytest $selected_test"
    fi
}
zle -N pts

alias ptlf='pytest --lf'

alias fls='source ~/bin/scripts/opener.sh'

export LESS='--chop-long-lines --HILITE-UNREAD --ignore-case --incsearch --jump-target=4 --LONG-PROMPT --no-init --quit-if-one-screen --RAW-CONTROL-CHARS --use-color --window=-4'


eval "$(direnv hook zsh)"



# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# A function to visually change directories with nval
lcd() {
    # Run lstr and capture the selected path into a variable.
    
    local selected_dir
    selected_dir=$(navl)

    # If the user selected a path (and didn't just quit), `cd` into it.
    # Check if the selection is a directory.
    if [[ -n "$selected_dir" && -d "$selected_dir" ]]; then
        cd "$selected_dir"
    fi
}

cddl() {
  local selection
  selection=$(navl <"$TTY") || return
  LBUFFER+="$selection"

}
zle -N cddl
bindkey '^n' cddl


# fzf and keybindings.
# Set up fzf key bindings and fuzzy completion, but disable Ctrl-T and Alt-C
FZF_ALT_C_COMMAND= source <(fzf --zsh)
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
source ~/repos/fzf-git.sh/fzf-git.sh

# enable zsh autosuggestions.
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

. "$HOME/.local/bin/env"
